from reportlab.lib.pagesizes import A4
from reportlab.platypus import BaseDocTemplate, Frame, PageTemplate, Paragraph, Spacer, Image
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.enums import TA_CENTER, TA_RIGHT, TA_JUSTIFY
from reportlab.lib.units import inch
from datetime import datetime
import os
import re

def generate_news_pdf(content, filename="iacine_news_report.pdf", header_logo=None, footer_logo=None, author="IAcine"):
    styles = getSampleStyleSheet()
    styles.add(ParagraphStyle(name='TitleCenter', fontSize=20, alignment=TA_CENTER, spaceAfter=10))
    styles.add(ParagraphStyle(name='MetaRight', fontSize=10, alignment=TA_RIGHT, spaceAfter=6))
    styles.add(ParagraphStyle(name='NormalJustified', fontSize=11, alignment=TA_JUSTIFY, leading=16))

    doc = BaseDocTemplate(filename, pagesize=A4,
                          rightMargin=40, leftMargin=40, topMargin=80, bottomMargin=60)

    frame = Frame(doc.leftMargin, doc.bottomMargin, doc.width, doc.height, id='normal')

    def add_page(canvas, doc):
        canvas.saveState()
        if header_logo and os.path.exists(header_logo):
            canvas.drawImage(header_logo, doc.pagesize[0] - 120, doc.pagesize[1] - 60, width=60, preserveAspectRatio=True)
        if footer_logo and os.path.exists(footer_logo):
            canvas.drawImage(footer_logo, doc.pagesize[0] / 2 - 30, 20, width=60, preserveAspectRatio=True)
        canvas.setFont("Helvetica", 8)
        canvas.drawCentredString(doc.pagesize[0] / 2, 12, f"Generated by {author} - {datetime.now().strftime('%Y-%m-%d')}")
        canvas.restoreState()

    doc.addPageTemplates([PageTemplate(id='main', frames=frame, onPage=add_page)])

    content = re.sub(r"#+ ", "", content)
    content = re.sub(r"\[source: (.*?)\]\((.*?)\)", r'(source: <a href="\2">\1</a>)', content)

    story = []
    story.append(Paragraph("AI-Powered News Summary", styles['TitleCenter']))
    story.append(Paragraph(f"Generated on: {datetime.now().strftime('%B %d, %Y')}", styles['MetaRight']))
    story.append(Spacer(1, 12))

    for line in content.split("\n"):
        line = line.strip()
        if line:
            story.append(Paragraph(line, styles['NormalJustified']))
            story.append(Spacer(1, 8))

    doc.build(story)
    return filename